ADLab pw: Luf2gdep%e*u8HY6#&pG


- add checks to see if the servers already exist so it doesn't get duplicated
- fetch creds from Key vault
- add separate public IPs for each server to avoid nested RDP sessions. [done]
- GitHub actions to automate the process
- authenticate with a service principal

- define DNS servers explicitly on VNET. for some reason they use an Azure DNS server instead of the one defined in the NIC. changing the default DNS server on the VNET and restarting the VMs fixed this
- IT will have to create the KV secret for me, as well as the service principal. I'll need to get the name of the secret from them so I can use it in the script. I'll need the service principal creds
	- I may actually be able to keep the SP pw in Bit Warden and have the CAs grab it, then use the GitHub Actions Azure Login Action to authenticate, instead of coding credentials in the script



Lessons Learned from this project:
- weird "-" character??? possibly from copying code created by chatgpt?? deleted it and added a new "-" and it worked.
- order of operations for resource creation???
- DNS servers... NICs were not using the correct one. they were using azure dns servers instead of the DC1 DNS server that I had assigned.
- Check if a machine is domain joined: systeminfo | findstr /B /C:"Domain"
- Using a Service Principal vs. an App Registration: SP is easier for simple automation tasks. App Reg is more useful for apps that need to auth to Azure or expose APIs.
- the SP credentials as well as the local and domain admin account credentials can be stored and retrieved from GitHub Secrets instead of Key Vault??? might make it much easier??